name: 'CI workflow'
on:
  push:
    branches:
      - main
env:
  IMAGE_NAME: image
  FILES_IMAGE_NAME: cortex-argocd-myapps-sample3-frontend

jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build app image
        run: docker build ./FrontendApplication -f ./FrontendApplication/app.dockerfile --tag image --tag latest      
        
      - name: Log into Docker Hub Registry
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
        
      - name: Push app image
        id: image
        run: |
          IMAGE_ID=${{ secrets.DOCKER_HUB_USERNAME }}/$FILES_IMAGE_NAME
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=$(echo ${{ github.sha }} | cut -c1-8)
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo IMAGE_NAME=$IMAGE_NAME
          echo "Taging the image:$IMAGE_NAME with tag $IMAGE_ID:$VERSION"
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          echo "Taging the image:$IMAGE_NAME with tag $IMAGE_ID:latest"
          docker tag image $IMAGE_ID:latest
          docker push $IMAGE_ID:latest
          echo "::set-output name=version::$VERSION"        
        
